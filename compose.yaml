# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP.NET Core service.

services:
  monarch:
    image: monarch
    build:
      context: .
      dockerfile: app/src/Monarch/Dockerfile
    ports:
      - 8080:8080
    secrets:
      - monarch_sql_monarch_password
  monapi-worker:
    image: monapi-worker
    build:
      context: .
      dockerfile: app/src/Monapi.Worker/Dockerfile
    secrets:
      - monarch_sql_monapi_password
      - monarch_newrelic_api_key
      - monarch_nagios_api_key
      - monarch_jira_api_key
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD_FILE: /run/secrets/monarch_sql_sa_password
      # MSSQL_TLS_CERT:
      # MSSQL_TLS_KEY:
      # MSSQL_TLS_PROTOCOLS: 1.2,1.3
    ports:
      - 1433:1433
    volumes:
      - sqlserverdata:/var/opt/mssql
      - ./initdb/setup.sql:/usr/config/setup.sql
      - ./initdb/initdb.sh:/usr/config/initdb.sh
    command: /bin/bash -c "./usr/config/initdb.sh"
    secrets:
      - monarch_sql_sa_password
      - monarch_sql_monarch_password
      - monarch_sql_monapi_password
volumes:
  sqlserverdata:
secrets:
  monarch_sql_sa_password:
    # external: true
    file: ./.credentials/sql_sa_password.txt # development only
  monarch_sql_monarch_password:
    # external: true
    file: ./.credentials/sql_monarch_password.txt # development only
  monarch_sql_monapi_password:
    # external: true
    file: ./.credentials/sql_monapi_password.txt # development only
  monarch_newrelic_api_key:
    # external: true
    file: ./.credentials/newrelic_api_key.txt # development only
  monarch_nagios_api_key:
    # external: true
    file: ./.credentials/nagios_api_key.txt # development only
  monarch_jira_api_key:
    # external: true
    file: ./.credentials/jira_api_key.txt # development only
  monarch_slack_webhooks:
    # external: true
    file: ./.credentials/slack_webhooks.json # development only